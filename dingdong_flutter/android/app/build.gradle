def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
	localPropertiesFile.withReader('UTF-8') { reader ->
		localProperties.load(reader)
	}
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
	throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
	flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
	flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
	compileSdkVersion 28

	lintOptions {
		disable 'InvalidPackage'
	}

	defaultConfig {
		// TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
		applicationId "com.zxac.dingdong_flutter"
		minSdkVersion 16
		targetSdkVersion 28
		versionCode flutterVersionCode.toInteger()
		versionName flutterVersionName
//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
		manifestPlaceholders = [
				AMAP_KEY     : "4cad2d787551c53980ca94675c5db6b6", /// 高德地图key
				BAIDU_MAP_KEY: "LDehsPmP5qMRfhk2rELGbGpqMdUThsHP", /// 百度地图AK
		]

		buildConfigField "boolean","LOG","true"

		ndk {
			abiFilters 'arm64-v8a', 'armeabi', 'mips', 'mips64'
		}
	}

	signingConfigs {
		release {
			keyAlias keystoreProperties['keyAlias']
			keyPassword keystoreProperties['keyPassword']
			storeFile file(keystoreProperties['storeFile'])
			storePassword keystoreProperties['storePassword']
		}
	}
	buildTypes {
		release {
			ndk {
				abiFilters 'armeabi-v7a','arm64-v8a'
			}
			minifyEnabled false
			signingConfig signingConfigs.release
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}

	sourceSets {
		main {
			jniLibs.srcDir 'libs'
		}
	}
}

flutter {
	source '../..'
}

dependencies {
	implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
	testImplementation 'junit:junit:4.12'
	androidTestImplementation 'androidx.test:runner:1.1.1'
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
	/// 注意这里需要在主项目增加一条依赖，否则可能发生编译不通过的情况
	implementation 'com.amap.api:location:4.5.1'
	implementation 'androidx.appcompat:appcompat:1.0.2'
	implementation files('libs/BaiduLBS_Android.jar')
	implementation files('libs/com.baidu.tts_2.3.2.20180713_6101c2a.jar')
	implementation 'com.haozhang.libary:android-slanted-textview:1.2'
	implementation "com.hanks:htextview-base:0.1.6"        // base library
	implementation "com.hanks:htextview-line:0.1.6"        // optional
}
